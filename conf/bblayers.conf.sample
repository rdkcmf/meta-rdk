#
# LAYER_CONF_VERSION is increased each time build/conf/bblayers.conf
# changes incompatibly
LCONF_VERSION = "6"

BBPATH = "${TOPDIR}"
BBFILES ?= ""
RDKROOT := "${@os.path.abspath(os.path.dirname(d.getVar('FILE', True)) + '/../..')}"

BBLAYERS ?= " \
  ${RDKROOT}/meta-rdk \
  ${@'${RDKROOT}/meta-qt5' if os.path.isfile('${RDKROOT}/meta-qt5/conf/layer.conf') else ''} \
  ${@'${RDKROOT}/meta-browser' if os.path.isfile('${RDKROOT}/meta-browser/conf/layer.conf') else ''} \
  ${@'${RDKROOT}/meta-java' if os.path.isfile('${RDKROOT}/meta-java/conf/layer.conf') else ''} \
  ${RDKROOT}/meta-openembedded/meta-webserver \
  ${RDKROOT}/meta-openembedded/meta-multimedia \
  ${RDKROOT}/meta-openembedded/meta-filesystems \
  ${RDKROOT}/meta-openembedded/meta-oe \
  ${RDKROOT}/meta-openembedded/meta-networking \
  ${@'' if os.path.isfile('${RDKROOT}/openembedded-core/meta/recipes-devtools/ruby/ruby.inc') else '${RDKROOT}/meta-openembedded/meta-ruby'} \
  ${@'${RDKROOT}/meta-linaro/meta-linaro' if os.path.isfile('${RDKROOT}/meta-linaro/meta-linaro/conf/layer.conf') else ''} \
  ${@'${RDKROOT}/meta-linaro/meta-linaro-toolchain' if os.path.isfile('${RDKROOT}/meta-linaro/meta-linaro-toolchain/conf/layer.conf') else ''} \
  ${RDKROOT}/openembedded-core/meta \
  ${@'${RDKROOT}/meta-gplv2' if os.path.isfile('${RDKROOT}/meta-gplv2/conf/layer.conf') else ''} \
  ${@'${RDKROOT}/meta-python2' if os.path.isfile('${RDKROOT}/meta-python2/conf/layer.conf') else ''} \
  "

# CPC requires dedicated licenses, we need to support build when CPC is not
# available. So we only add meta-rdk-comcast layer if it exists locally.
BBLAYERS =+ "${@'${RDKROOT}/meta-rdk-comcast' if os.path.isfile('${RDKROOT}/meta-rdk-comcast/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-virtualization' if os.path.isfile('${RDKROOT}/meta-virtualization/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-rdk-restricted' if os.path.isfile('${RDKROOT}/meta-rdk-restricted/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-rdk-mesh' if os.path.isfile('${RDKROOT}/meta-rdk-mesh/conf/layer.conf') else ''}"
BBLAYERS =+ "${@'${RDKROOT}/meta-rdk-comcast-broadband' if os.path.isfile('${RDKROOT}/meta-rdk-comcast-broadband/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-rdk-broadband' if os.path.isfile('${RDKROOT}/meta-rdk-broadband/conf/layer.conf') else ''}"
BBLAYERS =+ "${@'${RDKROOT}/meta-rdk-comcast-video' if os.path.isfile('${RDKROOT}/meta-rdk-comcast-video/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-rdk-video' if os.path.isfile('${RDKROOT}/meta-rdk-video/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-rdk-voice' if os.path.isfile('${RDKROOT}/meta-rdk-voice/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-rdk-ext' if os.path.isfile('${RDKROOT}/meta-rdk-ext/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-openembedded/meta-python' if os.path.isfile('${RDKROOT}/meta-openembedded/meta-python/conf/layer.conf') else ''}"
BBLAYERS =+ "${@'${RDKROOT}/meta-rdk-broadband-cmf-restricted' if os.path.isfile('${RDKROOT}/meta-rdk-broadband-cmf-restricted/conf/layer.conf') else ''}"
BBLAYERS =+ "${@'${RDKROOT}/meta-rtlwifi' if os.path.isfile('${RDKROOT}/meta-rtlwifi/conf/layer.conf') else ''}"
BBLAYERS =+ "${@'${RDKROOT}/meta-rdk-netflix' if os.path.isfile('${RDKROOT}/meta-rdk-netflix/conf/layer.conf') else ''}"
BBLAYERS =+ "${@'${RDKROOT}/meta-rdk-amazon' if os.path.isfile('${RDKROOT}/meta-rdk-amazon/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-rdk-cujo' if os.path.isfile('${RDKROOT}/meta-rdk-cujo/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-rdk-broadband-cmf-poc' if os.path.isfile('${RDKROOT}/meta-rdk-broadband-cmf-poc/conf/layer.conf') else ''}"
BBLAYERS += "${@'${RDKROOT}/meta-rdk-cognitive/meta-rdk-cognitive' if os.path.isfile('${RDKROOT}/meta-rdk-cognitive/meta-rdk-cognitive/conf/layer.conf') else ''}"
